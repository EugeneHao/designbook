[["index.html", "Design Notebook Chapter 1 About", " Design Notebook Hao Sun 2022-07-28 Chapter 1 About This is a note for popular clinical trial designs. Each design contains some corresponding literature, a shiny app for calculation and computation details. "],["phase-i-design.html", "Chapter 2 Phase I design 2.1 mPTI 2.2 mTPI-2", " Chapter 2 Phase I design 2.1 mPTI mTPI design is short for modified toxicity probability interval design (Ji et al. 2010). Suppose the probability of toxicity at dose \\(d\\) is \\(p_d\\) and \\(n_d\\) is the number of patient treated at dose \\(d\\). The number of DLTs (dose limiting toxicity), \\(x_d\\) has a binomial distribution \\(x_d\\mid p_d \\sim Bin(n_d, p_d)\\). Denote the target toxicity probability as \\(p_T\\). There are 3 possible decisions by comparing \\(p_d\\) and \\(p_T\\): \\(M_E: p_d \\in (0, p_T - \\epsilon_1)\\), escalate to the next level dose; \\(M_S: p_d \\in (p_T - \\epsilon_1, p_T + \\epsilon_2)\\), stay at the current dose; \\(M_D: p_d \\in (p_T + \\epsilon_2, 1)\\), de-escalate to the lower level dose. The mTPI design assumes the prior of \\(p_d\\) is a Beta distribution, \\(p_d \\sim Beta(\\alpha, \\beta)\\). Usually \\(\\alpha = \\beta = 1\\). The dose-finding decision rule is given by \\[ \\mathcal{D}_{mTPI} = \\arg\\max_{i\\in \\{E, S, D\\}} UPM(i, d) \\] where \\(UPM(i, d) = Pr(p_d \\in M_i \\mid x_d)/Pr(p_d\\in M_i)\\) is called the unit probability mass. In this case, \\[ UPM(i, d) = \\frac{IBeta(c_{i2}; x+1, n-x+1) - IBeta(c_{i1}; x+1, n-x+1)}{c_{i2} - c_{i1}} \\] where \\(IBeta(q; a, b) = \\frac{1}{B(a, b)}\\int_0^q \\theta^{a-1}(1-\\theta)^{b-1}d\\theta\\). knitr::include_app(&quot;https://eugenehao.shinyapps.io/mtpi/&quot;) 2.2 mTPI-2 mTPI-2 design is an extension of mTPI by cutting the escalation interval and de-escalation interval into subintervals with the same length equal to \\((\\epsilon_1 + \\epsilon_2)\\) (Guo et al. 2017). The equivalence interval (EI) is still \\((p_T - \\epsilon_1, p_T+ \\epsilon_2)\\). However, the set of intervals below EI (LI) are \\(\\{(p_T - 2\\epsilon_1 - \\epsilon_2, p_T - \\epsilon_1), \\ldots, (p_T - k\\epsilon_1 - (k-1)\\epsilon_2, 0) \\}\\) and the set of intervals above EI (HI) are \\((p_T + \\epsilon_2, p_T + \\epsilon_1 + 2\\epsilon_2), \\ldots, (p_T + l\\epsilon_1 + (l+1)\\epsilon_2, 1) \\}\\). Let \\(A_i\\) denote the set of intervals under the decision \\(i \\in \\{E, S, D\\}\\). The decision function of mTPI-2 design is given by \\[ \\mathcal{D}_{mTPI2} = \\arg\\max_{i\\in \\{E, S, D\\}} \\max_{j \\in A_i} UPM(j, d) \\] knitr::include_app(&quot;https://eugenehao.shinyapps.io/mtpi-2/&quot;) References "],["phase-ii-design.html", "Chapter 3 Phase II design 3.1 Simon’s two-stage design", " Chapter 3 Phase II design 3.1 Simon’s two-stage design Simon’s two-stage design is used to minimize the expected sample size when the true response is less than some pre-determined uninterested level \\(\\pi_0\\) (Simon 1989). The null hypothesis is that \\(H_0: \\pi = \\pi_0\\) and the alternative hypothesis is \\(H_1: \\pi = \\pi_1\\) where \\(pi_1\\) is some desirable level that warrant further development. Suppose the Type I and Type II errors are \\(\\alpha\\) and \\(\\beta\\). Let \\(n_1\\) patients be given treatment in the first stage. If \\(r_1\\) or less respond or more than \\(r\\) respond, stop stage 1. Otherwise, let \\(n_2\\) patients be given treatment in the second stage. \\(n = n_1 + n_2\\). Suppose \\(X_1 \\sim Bin(n_1, \\pi)\\) and \\(X_2 \\sim Bin(n_2, \\pi)\\). We declare the new drug a Failure if \\(\\xi_F = X_1 \\leq r_1 \\text{ OR } \\{X_1 &gt; r_1 \\text { AND } X_1 + X_2 \\leq r \\}\\) Success if \\(\\xi_S = \\{X_1 &gt; r_1 \\text{ AND } X_1 + X_2 &gt; r \\}\\) Therefore, \\[ P(\\xi_F \\mid \\pi \\leq \\pi_0) \\leq \\alpha, \\quad P(\\xi_S \\mid \\pi \\geq \\pi_1) \\geq 1- \\beta \\] Moreover, we have \\[\\begin{aligned} P(\\xi_S \\mid \\pi) &amp; = \\sum_{m_1 &gt; r_1, m_1 + m_2 &gt; r} P(X_1 = m_1\\mid \\pi)P(X_2 = m_2\\mid \\pi) \\\\ P(\\xi_F \\mid \\pi) &amp; = 1- P(\\xi_S \\mid \\pi) \\end{aligned}\\] The expected sample size \\(EN(\\pi_0)\\) is given by \\[ n_1\\left[P(X_1 \\leq r_1\\mid \\pi = \\pi_0) + P(X_1 &gt; r\\mid \\pi = \\pi_0) \\right] + nP(r_1 + 1 \\leq X_1 \\leq r \\mid \\pi = \\pi_0) \\] The probability of early termination is \\(PET(\\pi_0) = P(X_1 \\leq r_1 \\text{ OR } X_1 &gt;r\\mid \\pi = \\pi_0)\\). There are several choices to select \\((r_1, n_1, r, n)\\): Optimal design: the one has the smallest expected sample size when \\(\\pi = \\pi_0\\). Minimax design: the one has the smallest total sample size for the whole trial when \\(\\pi = \\pi_0\\). Adimssible design: compromise the minimax and the optimal design. (Jung et al. 2004) library(clinfun) ph2simon(pu = 0.2, pa = 0.4, ep1 = 0.1, ep2 = 0.2) ## ## Simon 2-stage Phase II design ## ## Unacceptable response rate: 0.2 ## Desirable response rate: 0.4 ## Error rates: alpha = 0.1 ; beta = 0.2 ## ## r1 n1 r n EN(p0) PET(p0) ## Optimal 2 12 7 25 17.74 0.5583 ## Minimax 2 14 7 24 19.52 0.4481 library(ph2mult) binom.design(type = &quot;admissible&quot;, p0 = 0.15, p1 = 0.3, signif.level = 0.05, power.level = 0.9) ## r1 n1 r n EN.p0. PET.p0. error power ## Optimal 5 30 17 82 45.05006 0.7105757 0.04609244 0.9007424 ## Admissible 5 31 16 76 45.28032 0.6826597 0.04694758 0.9037415 ## Admissible.1 6 36 15 70 45.86191 0.7099439 0.04654875 0.9000510 ## Minimax 6 42 14 64 51.80052 0.5545216 0.04845876 0.9002785 References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
